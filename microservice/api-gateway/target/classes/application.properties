# API Gateway Configuration

# Application name and port
spring.application.name=api-gateway
server.port=8080

# Eureka client configuration
eureka.client.service-url.defaultZone=http://discovery-server:8761/eureka/
eureka.instance.prefer-ip-address=true

# Gateway routes configuration
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true
spring.cloud.compatibility-verifier.enabled=false

# Access Control Service route
spring.cloud.gateway.routes[0].id=access-control-service
spring.cloud.gateway.routes[0].uri=lb://access-control-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/access/**
spring.cloud.gateway.routes[0].filters[0]=RewritePath=/api/access/(?<segment>.*), /api/$\{segment}

# User Management Service route
spring.cloud.gateway.routes[1].id=user-management-service
spring.cloud.gateway.routes[1].uri=lb://user-management-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/users/**
spring.cloud.gateway.routes[1].filters[0]=RewritePath=/api/users/(?<segment>.*), /api/$\{segment}

# Biometrics Service route
spring.cloud.gateway.routes[2].id=biometrics-service
spring.cloud.gateway.routes[2].uri=lb://biometrics-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/biometrics/**
spring.cloud.gateway.routes[2].filters[0]=RewritePath=/api/biometrics/(?<segment>.*), /api/$\{segment}

# Model Management Service route
spring.cloud.gateway.routes[3].id=model-management-service
spring.cloud.gateway.routes[3].uri=lb://model-management-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/models/**
spring.cloud.gateway.routes[3].filters[0]=RewritePath=/api/models/(?<segment>.*), /api/$\{segment}

# Training Data Service route
spring.cloud.gateway.routes[4].id=training-data-service
spring.cloud.gateway.routes[4].uri=lb://training-data-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/training/**
spring.cloud.gateway.routes[4].filters[0]=RewritePath=/api/training/(?<segment>.*), /api/$\{segment}

# Global CORS configuration
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowed-origins=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowed-headers=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].max-age=3600

# Circuit breaker configuration
resilience4j.circuitbreaker.instances.default.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.default.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.default.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.default.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.default.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.default.sliding-window-size=10

# Rate limiter configuration
resilience4j.ratelimiter.instances.default.limit-for-period=100
resilience4j.ratelimiter.instances.default.limit-refresh-period=1s
resilience4j.ratelimiter.instances.default.timeout-duration=0

# JWT configuration (uncomment and configure when implementing JWT authentication)
# jwt.secret=your-secret-key
# jwt.expiration=86400000

# Security configuration
# spring.security.user.name=admin
# spring.security.user.password=admin

# Actuator endpoints
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

spring.security.user.name=admin
spring.security.user.password=admin

management.endpoint.gateway.enabled=true

# Logging configuration
logging.level.root=INFO
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.org.springframework.web=DEBUG
logging.file.name=logs/api-gateway.log
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n